================================================
TITLE SLIDE
================================================

Briefly state the purpose of the presentation
Go over the different sections

================================================ ( 2 MIN )
INTRO
================================================

What is a Password Manager  
=================================================
- A password manager is a software application that helps a user store and organize passwords. 

- Also called a password vault or virtual safe

- Core functionality of a password manager is to securely store large collections of passwords in a single location or in some cases multiple sychronized locations

- Usually stores the passwords encrypted, requiring the user to create a master password; a single, ideally very strong password which grants the user access to their entire password database.

- Some password managers store passwords on the user's computer, whereas others store the data utilizing a cloud

- Many provide additional features beyond the core functionality such as form filling and password generation and securing information that is deemed sensitive enough.



How they work - 1 MIN
=================================================
-The more common managers would encorporate this scheme.  Using a central database stored in a cloud to store all usernames and password for various sites within a cloud based environment.  

-The database would also be stored locally on the users computer, in the event that you cannot access the online database.  Once able to access it, your new information would sync to the cloud.

-They rely on encryption for data protection, where the encryption/decryption process is done locally using a key  that is generated by a combination of the username and the master password entered by the user. 

- It's important to know that the master username and password is not stored on the cloud server with the rest of the collection, only the hashed format is so that they can verify who you are.  So even the provider of the service does not know the key credentials

- This would be a symmetric key such as AES-256 bit standards

- Some types of password managers would not use this cloud based version at all



Who uses them and why - 30 SEC
=================================================

Single end users

SMB
	
Enterprise Level 

-Most types of password managers on the market offer different levels of service that cater towards each level of business use

-When moving into smb and enterprise level managers, you tend to see features like Active Directory, Group Management, and a centralized console that administrators can utilize to manage all employees.

WHY?
	- Obvious one:  It's convienent to have everything in one basket
	- Greatly helps stop the use of weak passwords
	- Also helps ensures that you do not the same password for each and every account you 		own

-  We will get into more advantages and disadvantages in the next session as well



============= SKIP IF YOU NEED TO 
-There are other enterprise level password managers 

Centrify is an identity management software and cloud-based Identity-as-a-Service ("IDaaS") provider that allows programs to manage multiple identities across computer networks and cloud computing environments using Microsoft Active Directory as well as supports cloud-based directories		

Thycotic Secret Server
With Secret Server enterprise password management software, you and your colleagues can control access to critical passwords in one centralized, web-based repository. Our password management software offers permissioned users secure access to passwords and other privileged information.	

============= SKIP IF YOU NEED TO
================================================( 3 MIN )
TYPES OF PASSWORD MANAGERS
================================================


Types of Password Managers - 1 MIN
=================================================

Password managers can come in these often-combined flavors:

Desktop - 

	Managers that store passwords only on a computer hard drive.  They would store the 		password information inside of an encrypted ( or possibly unencrypted ) file or 		  	  database.  

	The popular browsers like IE, Firefox and Chrome all have built in password managers 	that are used locally and can optionally sync with other devices in various ways.

	(eg. Keepass, Password Safe, Pleasant Password Server )

Embedded security hardware 

	- A type of hardware that is used to save and encrypt your sensitive data through the use 	    of software that requires it.

	- Conforms to the Trusted Computing Platform Alliance ( TCPA ) standard

	- Purpose of this type of password manager is to keep it out of reach from malware or 		anything that is software based.
	


=============== SKIP THIS
	-software requires hardware embedded on a device in order to save and encrypt data
	-conforming to the Trusted Computing Platform Alliance(TCPA) standard
	(eg Lenovo's password management software works with the embedded hardware )
	
	The purpose of the Embedded Security Subsystem is to keep the user's sensitive data 	out of range from software based attacks (like viruses, Internet attacks etc.). One way the 		chip offers to achieve this is by providing storage for keys along with the necessary 		functions to handle them within itself, so that a for example a private key never has to 		leave the chip (can't be seen by any piece of software).


Portable - 

	Managers that are used on a mobile device, such as a PDA, smart phone, or as a 	   	   portable application on a USB memory stick.  
	
	A unique USB manager is called MyLOK that has a 36KB EEPROM memory chip that is 
	secured by an onboard cryptographic processor.  If the processor is tampered with the 	USB key self destructs.


	(eg. LastPass & Dashlane for Android, iOS, WP & MyLOK ( USB Password Manager )

Token - 

	Your credentials are protected using a security token, typically offering multi-factor 	authentication by combining access control mechanisms -  "something the user has" (smart card or USB stick) , "something the user knows" (PIN or password) and/or "something the user is" (biometrics - such as a fingerprint, hand, retina, or face scanner).

	(eg. MyLOK USB,  most software based password managers require master password and then a second password for other credentials, APC Biometric Password Manager )	

Web-based - 

	Online password manager where passwords are viewed and copied to/from a provider's 	    website.

Cloud-based -

	 Online password manager where credentials are stored on a service provider's servers 	  on the Internet, but handled by password management software running on the client's 		machine.

Stateless - 

	Passwords are generated on the fly from a master passphrase and a tag using a key 		derivation function or KDF that is used in cryptography.  No password information is 		stored either online , locally or cloud based.

	(eg. HashPass,  Petapass, Master Password Manager Helper ( Android ) )


List of Password Managers - 1 MIN
=================================================

- Shown here on this slide is a list of popular and well known password managers available to us.  

- Autotyping - This is not considered  as 'Autofill'.  Autotype is a function in some computer applications or programs, typically those containing forms, which fills in a field once you have typed in the first few letters.
(eg. KeePass could use TAB and ENTER to auto type the USERNAME  and 			PASSWORD for you  )

- Under Delivery Format:
	System Utility - meaning that it's integrated into the Operating System itself
	Cloud Based vs. Cloud Sync
	
	Cloud Sync 

		Using a provider on the Internet to synchronize files between all the desktop and 			mobile devices that a user owns. See cloud storage.

	Cloud Based

		The actual password manager software is stored in the cloud including possibly
		the encrypted password data or portions of it.


Advantages & Disadvantages - 1 MIN
=================================================


	Different types of password managers may have different advantages and disadvantages compared to each other based on their types.  Below is a generalized listing of each as well as some specifics to different types

ADV
---

-ease of use 
-cross platform
-additional features besides password management
-defense against phishing / pharming
-protection against keystroke logging malware


- As I mentioned during the introduction, an advantage is ease of use.  You don't have to remember your collection of passwords.  Only a single password

- They are easily incorporated in most software using APIs available in many software 	products

- Many provide additional features such as form filling and password generation.

- Password managers can also be used as a defense against phishing and pharming. Unlike human beings, a password manager program can also incorporate an automated login script that first compares the current site's URL to the stored site's URL. If the two don't match then the password manager does not automatically fill in the login fields. This is intended as a safeguard against visual imitations and look-alike websites.

Password managers can protect against keyloggers or keystroke logging malware. When using a multi-factor authentication password manager that automatically fills in logon fields, the user does not have to type any user names or passwords for the keylogger to pick up.


DISADV
---

-cannot protect against man-in-the-browser attacks
-compromised master password
-master password is discovered by keystroke logging malware
-XSS

- Man in the browser attacks are similiar to man in the middle attacks.  A trojan horse is used to intercept and manipulate transactions between the browser's executable and the security features.  So no form of SSL/Private Key or Multi factor authentication is going to help

- The term " all your eggs in one basket " is very apparent with a password manager.  If your master password is compromised....well, that's it.

- The master password could be subjected to a keylogger

- XSS.  We will look into this more but just so you are aware that it can be used very well against a password manager and it's autofill functionality.


============================= SKIP
Password managers cannot protect against Man-in-the-browser attacks, where malware on the user's device performs operations (e.g. on a banking website) while the user is logged in while hiding the malicious activity from the user.
Man in the browser attack is a proxy Trojan horse[1] that infects a web browser by taking advantage of vulnerabilities in browser security to modify web pages, modify transaction content or insert additional transactions, all in a completely covert fashion invisible to both the user and host web application. A MitB attack will be successful irrespective of whether security mechanisms such as SSL/PKI and/or two or three-factor Authentication solutions are in place.

Desktop password managers and browser based password managers are convenient; however, they often do not provide any protection for stored passwords. If the computer is on, it is possible for another individual to access the password manager and read the user's password. 

A compromised master password renders all of the protected passwords vulnerable. This demonstrates the inverse relation between usability and security: a single password may be more convenient (usable), but if compromised would render all of the held passwords compromised.

the master password may also be attacked and discovered using key logging or acoustic cryptanalysis

================================================( 5 MIN )
IN-DEPTH WITH LASTPASS
================================================


INTRO - 30 SEC
=================================================

- It's a Freemium Based Model

- Their clients include leading e-commerce and financial services brands like Amazon, HSBC, Dell, TD Canada Trust, American Express and Yahoo. 

First worked together developing integrated VoIP (voice over the Internet) and e-commerce technology at eStara, Inc. where they designed, built, launched the most widely deployed web-based 'Push to Talk', 'Call Tracking' and 'Click-to-Chat' services in the world.

SYSTEM REQUIREMENTS
=================================================

- Slide to show system requirements

FEATURES OF EACH FLAVOURS
=================================================

- Has all the basic features of the LastPass application are free, while advanced features like
	support for mobile devices are part of LastPass Premium for $1/month. 


VIDEO - 2 MIN
=================================================

	NO SCRIPT

Overview - 2 MIN 30 SEC
=================================================

-LastPass uses AES 256-bit government level encryption with a key derivation function ( PBKDF2 ) to encrypt offline and online all sensitive information stored with your account 

(PBKDF2 -  applies a pseudorandom function, such as a cryptographic hash, cipher, or HMAC  to the input password or passphrase along with a salt value and repeats the process many times to produce a derived key, which can then be used as a cryptographic key in subsequent operations. ) DK = PBKDF2(PRF, Password, Salt, c, dkLen)

-  The standard version of PBKDF2 uses SHA-1 but LastPass uses SHA-256 because it is a slower hash and more resistant to brute force.  You have the option to also set the number of rounds between 5,000 to 200,000 but they don't recommend anything over 10,000, otherwise there may be login issues.

-The key used to encrypt and decrypt this information is based on your master password.  After they complete X number of rounds using PBKDF2,  lastpass uses that for the private key and then runs further rounds to hash the value and that is sent to their servers to allow verification.





================================================( 3 MIN )
SECURITY ISSUES
================================================

So you've heard me talk about what they are, what kinds are out there and an overview on a one in particular.  You might be wondering how safe can a password manager possibly be?

Encryption techniques used by password managers that safeguard your data are 
extremely robust as we covered with lastpass and other password managers.

But what about the methods that they use after your private data is unencrypted and utilized out in the open?  We'll take a look at  the autofill feature in particular.  

( PICTURE YOURSELF... )

================================= SKIP
AUTOFILL FEATURE
	- Automatic autofill
		as soon as the login page is loaded with no user interaction
	  Manual autofill
		requiring user interaction ( clicking or typing into the username field, keyboard 			shortcut 	pressed, etc )

	- All password managers within the article allowed passwords to be autofilled on any 		page within the same domain as the page  that the password was originally saved by the 		manager.

	WEAKNESSES
	-------
	*** Attacker can attack the password manager on the least -secure page within the 			domain
	*** Multiple sites hosted on the domain would be treated the same by the password 		     manager
	*** HTTP vs HTTPS login form pages
	*** Changes in HTML form action method ( Direct change or through Javascript injection)


SWEEP ATTACKS

- Sweep attacks work to steal the information that is autofilled by a password manager.  And this can be done without the user ever visiting the actual site on the device with the manager. It's generally done in three steps.  

	1 - Force the user to visit the attackers page at the target site chosen by the user
	2 - Inject Javascript code into the target site
	3 - Javascript code extracts passwords for the attacker


*** IFRAME SWEEP ATTACK - 
	- hotspot page contains invisible iframes pointing to different target sites
	- attacker uses the control of a router to inject a login form and javascript
	into each iframe
	- requires a vulnerable page on a target site
	- password manager populates all the login forms in the iframes without the user
	 knowing and javascript extracts the credentials

*** REDIRECT SWEEK ATTACK -
	- user connects to an attacker controlled network
	- HTTP request sent to redirect to a vulnerable page on a target site
	- User receives, gets redirected
	- Attacker injects login form and javascript
	- Javascript hides the fact that the user is visiting the target site and shows
	only the intended site
	- Password manager autofills and javascript captures
	- Repeats with another HTTP request, hides page, captures.
	- only very small indications in the address bar that can be overlooked

*** WINDOW SWEEP ATTACK
	- similiar to IFRAME sweep attack
	- uses windows instead of iframes
	- tricks user into disabling popup blocker.  user required to allow window to open in order
	to continue ( to allow wifi access )
	- can be more noticible but can be disguised with Javascript

INJECTION AND EXTRACTION TECHNIQUES

- Here we go more into depth with how the attacker uses different elements to complete the injection and/or extraction against the password manager user.


INJECTION ( used against these )
	HTTP login pages ( but submit information via HTTPS )
		Bad practice to serve login page via HTTP. Vulnerable to sweep attacks
		( reddit.com, godaddy.com, att.com )
	Embedded devices
		Some home router login page is served over HTTP , assumed protected by Wifi 			WPA2 encryption keys or router page via HTTPS with a self signed certificate
	Broken HTTPS
		HTTPS site with a bad certificate
	Active Mixed Content
		HTTPS site with content loaded via HTTP
	XSS 
		Injecting javascript to modify the page as needed
	Leftover passwords
		Older, less secure versions of a site before an upgrade possibly
		( Before facebook was HTTPS, attacker could spoof the HTTP facebook login
		page to steal it )

EXTRACTION 
	Stealth
		waiting for a login form to populate
	( Show Javascript )

	Form " Action "
		modifying the login form's action attribute to submit to the attacker controlled site
	( Show Javascript )

	Click jacking
		-Happens when the attacker presents the user with a fake form seem-
		ingly unrelated to the target site. Overlaying the benign
		form is an invisible iFrame pointing to the attackers site
		login page. 
	
				

SUGGESTED POSSIBLE FIXES
	Forcing user interaction
		-Makes automatic filling no worse than manual entry
		-keyboard shortcut, clicking a button, selecting an entry from a menu, or typ-
		 ing into the username field.
		- should occur through trusted browser UI preventing malicous javascripting
		- should show the domain name prior to autofill
		- broken HTTPS. refuse to autofill completely		
	Minimizing user inconvenience. 
		- Forcing interaction essentially causes inconvienence to the user
		- An auto fill and submit  functionality triggered by user interaction
		( 1Password, Lastpass, Norton IdentitySafe and KeePass support this )
		- As long as similiar conditions above exist, then would be as secure as a
		manual entry
	Secure Filling
		This defense similiar to Http Only cookies  but applied
		to autofilled passwords: they can be submitted to the web
		server, but cannot be accessed by JavaScript. 
	Server Side Defenses
		HTTPS on both the login form and submit method
		CSP -  ( Content Security Policy )
			prevents execution of inline scripts making injection by 
			javascript ineffective
		Login Page
			Host on a different subdomain than the rest of the site
		( login.site.com instead of site.com )
			limits the number of pages considered same origin with the login
			page reduciing attack surface


================================================ ( 2 MIN )
CONCLUSION
================================================

IN SUMMARY -
=================================================



OPINION - 2 MIN
=================================================

Hopefully this presentation gave you a little more insight into the world of password managers.  They seem to be a necessary tool these days with all the username and 
password information we have to manage.

Some things I thought about while producing this presentation:

Issues with password managers are based more on what happens to the information after it's decrypted rather than how an attacker will break into an encrypted vault.

OTP for Lastpass - Good idea to have them as one time use.  Bad if you write them down and forget them somewhere and someone uses them before you can cancel them

You do have to take a " leap of faith " when working with a password manager and trust that your data is safe.  If you use one or decide to use one, make sure you take a good look at what they offer and that they are legit.  Some guidelines are in the handout for you to view.

I've since upgraded my package with Lastpass to Premium so that I could get the most out of it and I've also turned off my autofill functionality.


DEFINITIONS
----------------------

SHA 256 - 
	Part of the SHA-2 family.  Is a set of cryptographic hash functions designed by the NSA (U.S. National Security Agency).[3] SHA stands for Secure Hash Algorithm



The client-side PBKDF2 yeilds the key that is used by AES256. That does not get sent to us during logins, instead we do an additional round of hashing and that hash is what is sent to us for verification. It's a one-way hash, though, so again we cannot get the key from it nor can we decrypt the data on our end. When you login, that hash is what's sent to verify if you can download your encrypted data.

LastPass has opted to use SHA-256, a slower hashing algorithm that provides more protection against brute-force attacks. LastPass utilizes the PBKDF2 function implemented with SHA-256 to turn your master password into your encryption key. LastPass performs x number of rounds of the function to create the encryption key, before a single additional round of PBKDF2 is done to create your login hash.
The entire process is conducted client-side. The resulting login hash is what is communicated with LastPass. LastPass uses the hash to verify that you are entering the correct master password when logging in to your account.
LastPass also performs a large number of rounds of PBKDF2 server-side. This implementation of PBKDF2 client-side and server-side ensures that the two pieces of your data- the part that’s stored offline locally and the part that’s stored online on LastPass servers- are thoroughly protected:




PRF is a pseudorandom function of two parameters with output length hLen (e.g. a keyed HMAC)
Password is the master password from which a derived key is generated
Salt is a cryptographic salt
c is the number of iterations desired
dkLen is the desired length of the derived key
DK is the generated derived key



PBKDF2 applies a pseudorandom function, such as a cryptographic hash, cipher, or HMAC to the input password or passphrase along with a salt value and repeats the process many times to produce a derived key, which can then be used as a cryptographic key in subsequent operations. The added computational work makes password cracking much more difficult, and is known as key stretching. When the standard was written in 2000, the recommended minimum number of iterations was 1000, but the parameter is intended to be increased over time as CPU speeds increase. Having a salt added to the password reduces the ability to use precomputed hashes (rainbow tables) for attacks, and means that multiple passwords have to be tested individually, not all at once. The standard recommends a salt length of at least 64 bits.




